.PHONY: all install-opensearch uninstall-opensearch configure-opensearch create-service remove-service

# Variáveis
OPENSEARCH_VERSION=2.19.2
SERVICE_NAME=opensearch
PORT=8070
USERNAME=hawk
PASSWORD=pegaAVisao1@
SERVICES_DIR=services

all: install-opensearch configure-opensearch
	@echo "OpenSearch instalado e configurado com sucesso!"
	@echo "Usuário: $(USERNAME)"
	@echo "Senha: $(PASSWORD)"
	@echo "Porta: $(PORT)"
	@echo "Para iniciar os serviços, execute:"
	@echo "  sudo systemctl start opensearch"
	@echo "  sudo systemctl start opensearch-dashboards"
	@echo "Acesse o dashboard em: http://localhost:$(PORT)"

install-opensearch:
	@echo "Instalando OpenSearch..."
	# Instalar dependências necessárias
	apt-get update || { echo "Failed to update package list"; exit 1; }
	DEBIAN_FRONTEND=noninteractive apt-get install -y wget default-jre || { echo "Failed to install dependencies"; exit 1; }

	# Download e instalação do OpenSearch
	if [ ! -f opensearch-$(OPENSEARCH_VERSION)-linux-x64.deb ]; then \
		wget https://artifacts.opensearch.org/releases/bundle/opensearch/$(OPENSEARCH_VERSION)/opensearch-$(OPENSEARCH_VERSION)-linux-x64.deb || { echo "Failed to download OpenSearch"; exit 1; }; \
	fi
	DEBIAN_FRONTEND=noninteractive dpkg -i opensearch-$(OPENSEARCH_VERSION)-linux-x64.deb || { \
		apt-get install -f -y; \
		DEBIAN_FRONTEND=noninteractive dpkg -i opensearch-$(OPENSEARCH_VERSION)-linux-x64.deb || { echo "Failed to install OpenSearch"; exit 1; }; \
	}

	# Download e instalação do OpenSearch Dashboards
	if [ ! -f opensearch-dashboards-$(OPENSEARCH_VERSION)-linux-x64.deb ]; then \
		wget https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/$(OPENSEARCH_VERSION)/opensearch-dashboards-$(OPENSEARCH_VERSION)-linux-x64.deb || { echo "Failed to download OpenSearch Dashboards"; exit 1; }; \
	fi
	DEBIAN_FRONTEND=noninteractive dpkg -i opensearch-dashboards-$(OPENSEARCH_VERSION)-linux-x64.deb || { \
		apt-get install -f -y; \
		DEBIAN_FRONTEND=noninteractive dpkg -i opensearch-dashboards-$(OPENSEARCH_VERSION)-linux-x64.deb || { echo "Failed to install OpenSearch Dashboards"; exit 1; }; \
	}

configure-opensearch:
	@echo "Configurando OpenSearch..."
	# Configurar opensearch.yml
	cat > /etc/opensearch/opensearch.yml << EOF
network.host: 0.0.0.0
http.port: $(PORT)
discovery.type: single-node
node.name: opensearch-node1
cluster.name: opensearch-cluster

# Security settings
plugins.security.disabled: false
plugins.security.ssl.http.enabled: false
plugins.security.ssl.transport.enabled: false
plugins.security.allow_default_init_securityindex: true
plugins.security.allow_unsafe_democertificates: true
plugins.security.audit.type: internal_opensearch

# Performance settings
bootstrap.memory_lock: true
thread_pool.write.queue_size: 1000
indices.memory.index_buffer_size: 10%
indices.queries.cache.size: 10%

# Disable unnecessary features
action.auto_create_index: false
plugins.ml.enabled: false
plugins.alerting.enabled: false
plugins.index_state_management.enabled: false
plugins.security_analytics.enabled: false

# Node settings
node.master: true
node.data: true
node.ingest: true
EOF

	# Configurar JVM options
	mkdir -p /etc/opensearch/jvm.options.d/
	cat > /etc/opensearch/jvm.options.d/jvm.options << EOF
-Xms512m
-Xmx512m
-XX:+UseG1GC
-XX:G1ReservePercent=25
-XX:InitiatingHeapOccupancyPercent=30
-XX:+HeapDumpOnOutOfMemoryError
-XX:HeapDumpPath=/var/log/opensearch
EOF

	# Configurar system limits
	mkdir -p /etc/systemd/system/opensearch.service.d/
	cat > /etc/systemd/system/opensearch.service.d/override.conf << EOF
[Service]
LimitMEMLOCK=infinity
LimitNOFILE=65535
TimeoutStartSec=180
TimeoutStopSec=180
Restart=always
RestartSec=45
EOF

	# Configurar opensearch-dashboards.yml
	cat > /etc/opensearch-dashboards/opensearch_dashboards.yml << EOF
server.host: "0.0.0.0"
server.port: $(PORT)
opensearch.hosts: ["http://localhost:$(PORT)"]
opensearch_security.ssl.verification_mode: none
opensearch.ssl.verificationMode: none
EOF

	# Configurar credenciais
	cd /usr/share/opensearch/plugins/opensearch-security/tools && \
	./hash.sh -p $(PASSWORD) > hashed_password.txt && \
	HASHED_PASSWORD=$$(cat hashed_password.txt) && \
	cp /etc/opensearch/opensearch-security/internal_users.yml /etc/opensearch/opensearch-security/internal_users.yml.bak && \
	awk -v user="$(USERNAME)" -v pwd="$$HASHED_PASSWORD" '{ if ($$0 ~ /^admin:/) printf "%s:%s\n", user, pwd; else print $$0; }' /etc/opensearch/opensearch-security/internal_users.yml.bak > /etc/opensearch/opensearch-security/internal_users.yml

	# Ajustar permissões
	chown -R opensearch:opensearch /etc/opensearch
	chown -R opensearch-dashboards:opensearch-dashboards /etc/opensearch-dashboards
	chmod -R 2750 /etc/opensearch
	chmod -R 2750 /etc/opensearch-dashboards

	# Reiniciar serviços
	systemctl daemon-reload
	systemctl stop opensearch || true
	systemctl stop opensearch-dashboards || true
	sleep 5
	systemctl start opensearch
	sleep 30
	systemctl start opensearch-dashboards

uninstall-opensearch:
	@echo "Desinstalando OpenSearch..."
	systemctl stop opensearch || true
	systemctl stop opensearch-dashboards || true
	apt-get remove -y opensearch opensearch-dashboards
	apt-get purge -y opensearch opensearch-dashboards
	rm -rf /etc/opensearch
	rm -rf /etc/opensearch-dashboards
	rm -rf /var/lib/opensearch
	rm -rf /var/lib/opensearch-dashboards 