version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=lucas
      - POSTGRES_PASSWORD=kappa123test
      - POSTGRES_DB=app_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "0.0.0.0:5432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lucas"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["postgres", "-c", "listen_addresses=*"]

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass redis_secure_password123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_secure_password123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  opensearch:
    image: opensearchproject/opensearch:latest
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=false"
      - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=opensearch_secure_123"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.allow_unsafe_democertificates=true"
      - "plugins.security.allow_default_init_securityindex=true"
      - "plugins.security.nodes_dn_dynamic_config_enabled=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "curl -u admin:opensearch_secure_123 -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    ports:
      - "0.0.0.0:5601:5601"
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=false"
      - "OPENSEARCH_USERNAME=admin"
      - "OPENSEARCH_PASSWORD=opensearch_secure_123"
      - "SERVER_HOST=0.0.0.0"
    networks:
      - app_network
    depends_on:
      opensearch:
        condition: service_healthy

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://lucas:kappa123test@postgres:5432/app_db
      - REDIS_URL=redis://:redis_secure_password123@redis:6379
      - OPENSEARCH_URL=http://admin:opensearch_secure_123@opensearch:9200
      - API_USER=api_user
      - API_PASSWORD=api_secure_456
    ports:
      - "0.0.0.0:8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "0.0.0.0:80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro
    depends_on:
      - api
    networks:
      - app_network

volumes:
  postgres_data:
  redis_data:
  opensearch_data:

networks:
  app_network:
    driver: bridge 